Help("""
	Type: 
		'scons' to build the production program (default resource path: ".")

		'scons APP_RES="/my/new/root/path"' to specify a custom resource path 
			ex: scons APP_RES="/usr/share/gnome-arcade"
""")

#debug
#CCFLAGS   = '-std=c99 -Wpedantic -Wall -Wformat -Wformat-security -Wunused-result `pkg-config --cflags gtk+-3.0` -g3'

#release
CCFLAGS   = '-std=c99 -Wall `pkg-config --cflags gtk+-3.0` -g -O2 -march=native'
#CCFLAGS   = '-std=c99 -Wall `pkg-config --cflags gtk+-3.0` -O2 -march=native'

#fast & buggy
#CCFLAGS   = '-std=c99 -Wall `pkg-config --cflags gtk+-3.0` -O3 -march=native'

vars = Variables()
#vars.Add(PathVariable('APP_RES', 'Resource root of gnome-arcade: /usr/share/gnome-arcade', '/usr/share/gnome-arcade', PathVariable.PathAccept))
vars.Add(PathVariable('APP_RES', 'Resource root of gnome-arcade: /usr/share/gnome-arcade', ".", PathVariable.PathAccept))


LINKFLAGS 	= '`pkg-config --libs gtk+-3.0`'
CPPPATH 	= 'header'
SOURCE 		= Glob ('./src/*c')

#env = Environment (CCFLAGS=CCFLAGS, LINKFLAGS=LINKFLAGS, CPPPATH=CPPPATH)
env = Environment (variables = vars, CPPDEFINES={'APP_RES' : '\\"$APP_RES\\"'}, CCFLAGS=CCFLAGS, LINKFLAGS=LINKFLAGS, CPPPATH=CPPPATH)

t = env.Program (target='gnome-arcade', source=SOURCE)

Default (t)
